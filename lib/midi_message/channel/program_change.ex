defmodule MidiMessage.Channel.ProgramChange do
  defstruct [:channel, :program, :group, :number]

  @data [
    {0x00, "Piano", 0, "Acoustic grand piano"},
    {0x01, "Piano", 1, "Bright acoustic piano"},
    {0x02, "Piano", 2, "Electric grand piano"},
    {0x03, "Piano", 3, "Honky tonk piano"},
    {0x04, "Piano", 4, "Electric piano 1"},
    {0x05, "Piano", 5, "Electric piano 2"},
    {0x06, "Piano", 6, "Harpsicord"},
    {0x07, "Piano", 7, "Clavinet"},
    {0x08, "Chromatic percussion", 8, "Celesta"},
    {0x09, "Chromatic percussion", 9, "Glockenspiel"},
    {0x0A, "Chromatic percussion", 10, "Music box"},
    {0x0B, "Chromatic percussion", 11, "Vibraphone"},
    {0x0C, "Chromatic percussion", 12, "Marimba"},
    {0x0D, "Chromatic percussion", 13, "Xylophone"},
    {0x0E, "Chromatic percussion", 14, "Tubular bell"},
    {0x0F, "Chromatic percussion", 15, "Dulcimer"},
    {0x10, "Organ", 16, "Hammond / drawbar organ"},
    {0x11, "Organ", 17, "Percussive organ"},
    {0x12, "Organ", 18, "Rock organ"},
    {0x13, "Organ", 19, "Church organ"},
    {0x14, "Organ", 20, "Reed organ"},
    {0x15, "Organ", 21, "Accordion"},
    {0x16, "Organ", 22, "Harmonica"},
    {0x17, "Organ", 23, "Tango accordion"},
    {0x18, "Guitar", 24, "Nylon string acoustic guitar"},
    {0x19, "Guitar", 25, "Steel string acoustic guitar"},
    {0x1A, "Guitar", 26, "Jazz electric guitar"},
    {0x1B, "Guitar", 27, "Clean electric guitar"},
    {0x1C, "Guitar", 28, "Muted electric guitar"},
    {0x1D, "Guitar", 29, "Overdriven guitar"},
    {0x1E, "Guitar", 30, "Distortion guitar"},
    {0x1F, "Guitar", 31, "Guitar harmonics"},
    {0x20, "Bass", 32, "Acoustic bass"},
    {0x21, "Bass", 33, "Fingered electric bass"},
    {0x22, "Bass", 34, "Picked electric bass"},
    {0x23, "Bass", 35, "Fretless bass"},
    {0x24, "Bass", 36, "Slap bass 1"},
    {0x25, "Bass", 37, "Slap bass 2"},
    {0x26, "Bass", 38, "Synth bass 1"},
    {0x27, "Bass", 39, "Synth bass 2"},
    {0x28, "Strings", 40, "Violin"},
    {0x29, "Strings", 41, "Viola"},
    {0x2A, "Strings", 42, "Cello"},
    {0x2B, "Strings", 43, "Contrabass"},
    {0x2C, "Strings", 44, "Tremolo strings"},
    {0x2D, "Strings", 45, "Pizzicato strings"},
    {0x2E, "Strings", 46, "Orchestral strings / harp"},
    {0x2F, "Strings", 47, "Timpani"},
    {0x30, "Ensemble", 48, "String ensemble 1"},
    {0x31, "Ensemble", 49, "String ensemble 2 / slow strings"},
    {0x32, "Ensemble", 50, "Synth strings 1"},
    {0x33, "Ensemble", 51, "Synth strings 2"},
    {0x34, "Ensemble", 52, "Choir aahs"},
    {0x35, "Ensemble", 53, "Voice oohs"},
    {0x36, "Ensemble", 54, "Synth choir / voice"},
    {0x37, "Ensemble", 55, "Orchestra hit"},
    {0x38, "Brass", 56, "Trumpet"},
    {0x39, "Brass", 57, "Trombone"},
    {0x3A, "Brass", 58, "Tuba"},
    {0x3B, "Brass", 59, "Muted trumpet"},
    {0x3C, "Brass", 60, "French horn"},
    {0x3D, "Brass", 61, "Brass ensemble"},
    {0x3E, "Brass", 62, "Synth brass 1"},
    {0x3F, "Brass", 63, "Synth brass 2"},
    {0x40, "Reed", 64, "Soprano sax"},
    {0x41, "Reed", 65, "Alto sax"},
    {0x42, "Reed", 66, "Tenor sax"},
    {0x43, "Reed", 67, "Baritone sax"},
    {0x44, "Reed", 68, "Oboe"},
    {0x45, "Reed", 69, "English horn"},
    {0x46, "Reed", 70, "Bassoon"},
    {0x47, "Reed", 71, "Clarinet"},
    {0x48, "Pipe", 72, "Piccolo"},
    {0x49, "Pipe", 73, "Flute"},
    {0x4A, "Pipe", 74, "Recorder"},
    {0x4B, "Pipe", 75, "Pan flute"},
    {0x4C, "Pipe", 76, "Bottle blow / blown bottle"},
    {0x4D, "Pipe", 77, "Shakuhachi"},
    {0x4E, "Pipe", 78, "Whistle"},
    {0x4F, "Pipe", 79, "Ocarina"},
    {0x50, "Synth lead", 80, "Synth square wave"},
    {0x51, "Synth lead", 81, "Synth saw wave"},
    {0x52, "Synth lead", 82, "Synth calliope"},
    {0x53, "Synth lead", 83, "Synth chiff"},
    {0x54, "Synth lead", 84, "Synth charang"},
    {0x55, "Synth lead", 85, "Synth voice"},
    {0x56, "Synth lead", 86, "Synth fifths saw"},
    {0x57, "Synth lead", 87, "Synth brass and lead"},
    {0x58, "Synth pad", 88, "Fantasia / new age"},
    {0x59, "Synth pad", 89, "Warm pad"},
    {0x5A, "Synth pad", 90, "Polysynth"},
    {0x5B, "Synth pad", 91, "Space vox / choir"},
    {0x5C, "Synth pad", 92, "Bowed glass"},
    {0x5D, "Synth pad", 93, "Metal pad"},
    {0x5E, "Synth pad", 94, "Halo pad"},
    {0x5F, "Synth pad", 95, "Sweep pad"},
    {0x60, "Synth effects", 96, "Ice rain"},
    {0x61, "Synth effects", 97, "Soundtrack"},
    {0x62, "Synth effects", 98, "Crystal"},
    {0x63, "Synth effects", 99, "Atmosphere"},
    {0x64, "Synth effects", 100, "Brightness"},
    {0x65, "Synth effects", 101, "Goblins"},
    {0x66, "Synth effects", 102, "Echo drops / echoes"},
    {0x67, "Synth effects", 103, "Sci fi"},
    {0x68, "Ethnic", 104, "Sitar"},
    {0x69, "Ethnic", 105, "Banjo"},
    {0x6A, "Ethnic", 106, "Shamisen"},
    {0x6B, "Ethnic", 107, "Koto"},
    {0x6C, "Ethnic", 108, "Kalimba"},
    {0x6D, "Ethnic", 109, "Bag pipe"},
    {0x6E, "Ethnic", 110, "Fiddle"},
    {0x6F, "Ethnic", 111, "Shanai"},
    {0x70, "Percussive", 112, "Tinkle bell"},
    {0x71, "Percussive", 113, "Agogo"},
    {0x72, "Percussive", 114, "Steel drums"},
    {0x73, "Percussive", 115, "Woodblock"},
    {0x74, "Percussive", 116, "Taiko drum"},
    {0x75, "Percussive", 117, "Melodic tom"},
    {0x76, "Percussive", 118, "Synth drum"},
    {0x77, "Percussive", 119, "Reverse cymbal"},
    {0x78, "Sound effects", 120, "Guitar fret noise"},
    {0x79, "Sound effects", 121, "Breath noise"},
    {0x7A, "Sound effects", 122, "Seashore"},
    {0x7B, "Sound effects", 123, "Bird tweet"},
    {0x7C, "Sound effects", 124, "Telephone ring"},
    {0x7D, "Sound effects", 125, "Helicopter"},
    {0x7E, "Sound effects", 126, "Applause"},
    {0x7F, "Sound effects", 127, "Gunshot"}
  ]
  @list_programs Enum.map(@data, fn {_, a, b, c} -> %{number: b, program: c, group: a} end)
  def list_programs, do: @list_programs

  Enum.each(@data, fn {_hex, group, number, name} ->
    def decode(<<channel, unquote(number)>>),
      do: %__MODULE__{
        channel: channel,
        program: unquote(name),
        group: unquote(group),
        number: unquote(number)
      }
  end)
end
